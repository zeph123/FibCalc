
name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Zadanie 1
    # 1) plik Dockerfile przygotowany w punkcie 2A ma być podstawą do
    # zbudowania obrazy na węźle (runner) z systemem operacyjnym Ubuntu 20.04,
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - context: ./api
            dockerfile: ./api/docker/php/Dockerfile
            service_name: php
          - context: ./api
            dockerfile: ./api/docker/nginx/Dockerfile
            service_name: api
          - context: ./client
            dockerfile: ./client/docker/nginx/Dockerfile
            service_name: client

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) proces budowy obrazu zrealizowany ma być w oparciu o silnik buildkit,

      # Skonfigurowanie dockera + buildx
      - name: Buildx set-up
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      # Instalacja QEMU (opcjonalnie)
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      # Logowanie do Dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # B: W ramach działania workflow GitHub Action należy zbudowane obrazy przesłać do
      # swojego repozytorium PUBLICZNEGO na GitHub Packages (repo: ghcr.io).

      # Logowanie do GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # W dokumentacji: GITHUB_TOKEN, ale GitHub nie zezwala na nazwę rozpoczynającą się od: GITHUB_
          password: ${{ secrets.GIT_HUB_ACCESS_TOKEN }}

      # 3) obrazy mają umożliwić uruchomienie aplikacji FibCalc
      # na komputerach z procesorami 64-bitowymi Intel oraz Apple M1,

      # 4) obrazy mają być zgodne ze specyfikacją OCI.

      # C: W trakcie budowania obrazów należy wykorzystywać informacje cache w trybie
      # registry a docelowym repozytorium ma być publiczne repo studenta na DockerHub.

      # D: W pliku fib.yml należy zdeklarować i wykorzystać zasadę nazywania budowanych
      # obrazów według metody.

      # Wyodrębnienie metadanych
      - name: Docker Metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
#          images: |
#            ${{ secrets.DOCKER_HUB_USERNAME }}/zadanie1_${{ matrix.service_name }}
#            ghcr.io/${{ github.repository_owner }}/zadanie1_${{ matrix.service_name }}
          images: |
            name=
          # {{version}} = {{major}}.{{minor}}.{{patch}}
          tags: |
            type=ref,event=branch
            type=ref,prefix=pr-,event=pr
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}

      # Zbudowanie i wypchniecie obrazu na Dockerhub, GitHub Container Registry
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.metadata.outputs.tags }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/zadanie1:${{ matrix.service_name }}-${{ steps.metadata.outputs.tags }}
            ghcr.io/${{ github.repository_owner }}/zadanie1:${{ matrix.service_name }}-${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/zadanie1:${{ matrix.service_name }}-cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/zadanie1:${{ matrix.service_name }}-cache,mode=max

