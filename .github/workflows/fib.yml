
name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Zadanie 1
    # 1) plik Dockerfile przygotowany w punkcie 2A ma być podstawą do
    # zbudowania obrazy na węźle (runner) z systemem operacyjnym Ubuntu 20.04,
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - context: ./api
            dockerfile: ./api/docker/php/Dockerfile
            name: php
          - context: ./api
            dockerfile: ./api/docker/nginx/Dockerfile
            name: api
          - context: ./client
            dockerfile: ./client/docker/nginx/Dockerfile
            name: client

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) proces budowy obrazu zrealizowany ma być w oparciu o silnik buildkit,

      # Skonfigurowanie dockera + buildx
      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      # Instalacja QEMU (opcjonalnie)
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      # Logowanie do Dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # B: W ramach działania workflow GitHub Action należy zbudowane obrazy przesłać do
      # swojego repozytorium PUBLICZNEGO na GitHub Packages (repo: ghcr.io).

      # Logowanie do GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # W dokumentacji: GITHUB_TOKEN, ale GitHub nie zezwala na nazwę rozpoczynającą się od: GITHUB_
          password: ${{ secrets.GIT_HUB_ACCESS_TOKEN }}

      # 3) obrazy mają umożliwić uruchomienie aplikacji FibCalc
      # na komputerach z procesorami 64-bitowymi Intel oraz Apple M1,
      # 4) obrazy mają być zgodne ze specyfikacją OCI.

      # Zbudowanie i wypchniecie obrazu na Dockerhub
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/zadanie1:${{ matrix.name }}-latest
            ghcr.io/${{ github.repository_owner }}/zadanie1:${{ matrix.name }}-latest
